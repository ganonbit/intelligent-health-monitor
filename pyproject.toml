[project]
name = "intelligent-health-monitor"
version = "0.1.0"
description = "AI-powered system health monitoring with anomaly detection"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "pydantic-ai-slim[anthropic,evals,logfire,openai]>=0.8.1",
    "rich>=14.1.0",
    "structlog>=25.4.0",
    "typer>=0.17.3",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
    "hypothesis>=6.138.14",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-benchmark>=5.1.0",
    "ruff>=0.12.11",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["core"]

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
plugins = ["pydantic.mypy"]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--strict-markers --strict-config"
markers = [
    "asyncio: mark test as async test",
    "performance: mark test as a performance test",
    "parametrize: mark test to run with different parameters"
]
